[2023-10-02T02:39:50.005+0300] {taskinstance.py:1157} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: train_rf.task_train_model scheduled__2023-09-30T01:00:00+00:00 [queued]>
[2023-10-02T02:39:50.011+0300] {taskinstance.py:1157} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: train_rf.task_train_model scheduled__2023-09-30T01:00:00+00:00 [queued]>
[2023-10-02T02:39:50.011+0300] {taskinstance.py:1359} INFO - Starting attempt 1 of 1
[2023-10-02T02:39:50.106+0300] {taskinstance.py:1380} INFO - Executing <Task(PythonOperator): task_train_model> on 2023-09-30 01:00:00+00:00
[2023-10-02T02:39:50.110+0300] {standard_task_runner.py:57} INFO - Started process 5392 to run task
[2023-10-02T02:39:50.116+0300] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'train_rf', 'task_train_model', 'scheduled__2023-09-30T01:00:00+00:00', '--job-id', '63', '--raw', '--subdir', 'DAGS_FOLDER/test_dag_several_models.py', '--cfg-path', '/tmp/tmpa9s0extq']
[2023-10-02T02:39:50.118+0300] {standard_task_runner.py:85} INFO - Job 63: Subtask task_train_model
[2023-10-02T02:39:50.163+0300] {task_command.py:415} INFO - Running <TaskInstance: train_rf.task_train_model scheduled__2023-09-30T01:00:00+00:00 [running]> on host dsbulgako1-QEMU-Virtual-Machine
[2023-10-02T02:39:50.239+0300] {taskinstance.py:1660} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='dmitrii.bulghakov@gmail.com' AIRFLOW_CTX_DAG_OWNER='Dmitry Bulgakov' AIRFLOW_CTX_DAG_ID='train_rf' AIRFLOW_CTX_TASK_ID='task_train_model' AIRFLOW_CTX_EXECUTION_DATE='2023-09-30T01:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-09-30T01:00:00+00:00'
[2023-10-02T02:39:50.253+0300] {s3.py:1359} INFO - This function shadows the 'download_file' method of S3 API, but it is not the same. If you want to use the original method from S3 API, please call 'S3Hook.get_conn().download_file()'
[2023-10-02T02:39:50.254+0300] {s3.py:1365} INFO - Downloading source S3 file from Bucket mlops-project with path mlops_project/test_project/dataset/X_train.pkl
[2023-10-02T02:39:50.267+0300] {base.py:73} INFO - Using connection ID 's3_connector' for task execution.
[2023-10-02T02:39:50.268+0300] {connection_wrapper.py:340} INFO - AWS Connection (conn_id='s3_connector', conn_type='aws') credentials retrieved from login and password.
[2023-10-02T02:39:50.305+0300] {configprovider.py:949} INFO - Found endpoint for s3 via: config_global.
[2023-10-02T02:39:50.890+0300] {s3.py:1359} INFO - This function shadows the 'download_file' method of S3 API, but it is not the same. If you want to use the original method from S3 API, please call 'S3Hook.get_conn().download_file()'
[2023-10-02T02:39:50.891+0300] {s3.py:1365} INFO - Downloading source S3 file from Bucket mlops-project with path mlops_project/test_project/dataset/X_test.pkl
[2023-10-02T02:39:50.924+0300] {configprovider.py:949} INFO - Found endpoint for s3 via: config_global.
[2023-10-02T02:39:51.261+0300] {s3.py:1359} INFO - This function shadows the 'download_file' method of S3 API, but it is not the same. If you want to use the original method from S3 API, please call 'S3Hook.get_conn().download_file()'
[2023-10-02T02:39:51.261+0300] {s3.py:1365} INFO - Downloading source S3 file from Bucket mlops-project with path mlops_project/test_project/dataset/y_train.pkl
[2023-10-02T02:39:51.297+0300] {configprovider.py:949} INFO - Found endpoint for s3 via: config_global.
[2023-10-02T02:39:53.004+0300] {s3.py:1359} INFO - This function shadows the 'download_file' method of S3 API, but it is not the same. If you want to use the original method from S3 API, please call 'S3Hook.get_conn().download_file()'
[2023-10-02T02:39:53.005+0300] {s3.py:1365} INFO - Downloading source S3 file from Bucket mlops-project with path mlops_project/test_project/dataset/y_test.pkl
[2023-10-02T02:39:53.216+0300] {configprovider.py:949} INFO - Found endpoint for s3 via: config_global.
[2023-10-02T02:40:03.901+0300] {configprovider.py:949} INFO - Found endpoint for s3 via: config_global.
[2023-10-02T02:40:04.009+0300] {test_dag_several_models.py:143} INFO - Model train finished!
[2023-10-02T02:40:04.010+0300] {python.py:194} INFO - Done. Returned value was: {'model': 'rf', 'start_timestamp': '20231002 02:39', 'data_uploaded_timestamp': '20231002 02:39', 'data_prepared_timestamp': '20231002 02:39', 'train_start_timestamp': '20231002 02:39', 'train_end_timestamp': '20231002 02:40'}
[2023-10-02T02:40:04.033+0300] {taskinstance.py:1398} INFO - Marking task as SUCCESS. dag_id=train_rf, task_id=task_train_model, execution_date=20230930T010000, start_date=20231001T233950, end_date=20231001T234004
[2023-10-02T02:40:04.059+0300] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-10-02T02:40:04.075+0300] {taskinstance.py:2776} INFO - 1 downstream tasks scheduled from follow-on schedule check
